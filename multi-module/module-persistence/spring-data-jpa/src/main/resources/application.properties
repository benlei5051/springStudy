c3p0.url=${db.url}
c3p0.username=${db.username}
c3p0.password=${db.password}
# Additional native properties to set on the JPA provider.
#spring.jpa.properties.*= \
#\u663E\u793Asql\u8BED\u53E5
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.hbm2ddl.auto=create
# \u4F7F\u7528MYSQL5\u4F5C\u4E3A\u6570\u636E\u5E93\u8BBF\u95EE\u65B9\u8A00
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.format_sql=true
# DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.ddl-auto= update
# Initialize the schema on startup.
spring.jpa.generate-ddl=true
# Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#
spring.jpa.open-in-view=true
# Enable the PersistenceExceptionTranslationPostProcessor.
spring.dao.exceptiontranslation.enabled=true

spring.data.rest.base-path=/api
server.port=10020
